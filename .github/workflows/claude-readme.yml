name: Upsert README automatically by Claude Code

on:
  issue_comment:
    types: [created]
  issues:
    types: [opened]
  schedule:
    - cron: '0 2 * * 1'  # 毎週月曜日 2:00 UTC (日本時間 11:00) に実行
  workflow_dispatch:  # 手動実行も可能

env:
  # README_FILE: README.md
  README_FILE: README_claude.md

jobs:
  upsert-readme:
    if: |
      (github.event_name == 'issue_comment' && 
       contains(github.event.comment.body, '@claude-readme')) ||
      (github.event_name == 'issues' && 
       (contains(github.event.issue.title, 'README') || 
        contains(github.event.issue.body, '@claude-readme'))) ||
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      actions: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git and GitHub CLI
        run: |
          git config --global user.name "readme-bot[bot]"
          git config --global user.email "readme-bot[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          gh auth status

      - name: Upsert README with Claude
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          trigger_phrase: "@claude-readme"
          claude_args: |
            --allowedTools "Bash(ls -la *),Bash(cat *),Bash(find . -name '*' -type f),Bash(head -20 *),Bash(tree -L 2),Bash(git add ${{ env.README_FILE }}),Bash(git commit -m *),Bash(git push),Bash(gh issue comment *)"
            --system-prompt "リポジトリを分析して、${{ env.README_FILE }}を作成または更新してください。

            ## 🔄 実行タイプの確認：
            - Issue/コメントトリガー: ユーザーからの依頼による実行
            - 定期実行/手動実行: システムによる自動更新

            ## 最初に実行すること：
            1. '${{ env.README_FILE }}'ファイルの存在確認 (ls -la コマンドで確認)
            2. 存在する場合は現在の内容確認 (cat ${{ env.README_FILE }})
            3. リポジトリ構造の分析 (ls -la, find . -name '*.py' -o -name '*.js' -o -name '*.md' | head -20)

            ## README作成/更新の方針：
            **ファイルが存在しない場合（新規作成）:**
            - リポジトリ全体を詳細に分析
            - 以下の構造で包括的なREADMEを作成：
              # プロジェクト名
              ## 📋 概要
              ## ✨ 特徴
              ## 🛠️ 技術スタック
              ## 📦 インストール
              ## 🚀 使用方法
              ## 📁 ディレクトリ構造
              ## 🤝 コントリビューション
              ## 📄 ライセンス

            **ファイルが存在する場合（更新）:**
            - 既存の構造とスタイルを維持
            - 最新のコミット変更内容を反映
            - 新機能や変更点を適切に追加・修正
            - 古くなった情報を更新

            ## 分析すべき要素：
            - package.json, requirements.txt, Cargo.toml, go.mod等の依存関係
            - ソースコードの主要機能
            - 設定ファイル（Docker, CI/CD等）
            - 既存のドキュメント
            - ディレクトリ構造

            ## 重要な指示：
            - 常に日本語で記述
            - 実際のコードを分析して正確な情報を記載
            - サンプルコードは実際に動作するものを提供
            - 作成/更新後は必ずgitでコミット・プッシュ
            - コミットメッセージ例:
              * 新規作成: \"📝 Add comprehensive README_claude.md\"
              * 定期更新: \"📝 Update README_claude.md (scheduled)\"
              * 手動更新: \"📝 Update README_claude.md (manual)\"
              * Issue対応: \"📝 Update README_claude.md (requested)\"

            作業を開始してください！"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF: ${{ github.ref }}
